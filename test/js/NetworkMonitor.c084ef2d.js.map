{"version":3,"sources":["webpack:///./src/views/RealtimeMonitor/NetworkMonitor.vue?467a","webpack:///src/views/RealtimeMonitor/NetworkMonitor.vue","webpack:///./src/views/RealtimeMonitor/NetworkMonitor.vue?0d3c","webpack:///./src/views/RealtimeMonitor/NetworkMonitor.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","staticStyle","staticRenderFns","data","xAxis","yAxis","series","AutoSystemID","NetTrafficSend","NetTrafficReceive","SamplingTime","interval","myChart","myChart1","created","localStorage","getItem","$nextTick","console","log","$once","clearInterval","methods","getData","url","$axios","setData","length","hasOwnProperty","key","i","shift","forEach","el","name","value","num","getEcharts","$echarts","init","document","getElementById","setOption","tooltip","trigger","grid","left","right","bottom","containLabel","title","text","toolbox","feature","saveAsImage","type","boundaryGap","splitLine","show","setTimeout","window","onresize","resize","component"],"mappings":"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","file":"js/NetworkMonitor.c084ef2d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{staticClass:\"box-card\"},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"myChart\"}})])],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"myChart1\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div id=\"myChart\" style=\"height:400px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <div id=\"myChart1\" style=\"height:400px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      xAxis: [],\r\n      yAxis: '',\r\n      series: [],\r\n      AutoSystemID: '',\r\n      data: [],\r\n      NetTrafficSend: [],\r\n      NetTrafficReceive: [],\r\n      SamplingTime: [],\r\n      interval: '',\r\n      myChart: '',\r\n      myChart1: ''\r\n    }\r\n  },\r\n  created () {\r\n    this.AutoSystemID = localStorage.getItem('AutoSystemID')\r\n    this.$nextTick(() => {\r\n      this.getData()\r\n      this.interval = setInterval(() => {\r\n        console.log('ok')\r\n        this.getData()\r\n      }, 6000)\r\n    })\r\n    this.$once('hook:beforeDestroy', () => {\r\n      clearInterval(this.interval)\r\n    })\r\n  },\r\n  methods: {\r\n    getData () {\r\n      // this.NetTrafficSend = []\r\n      // this.NetTrafficReceive = []\r\n      // this.SamplingTime = []\r\n      var url = '/api/Monitor/GetSystemMonitorInfo'\r\n      this.$axios\r\n        .get(url, {\r\n          params: {\r\n            AutoSystemID: this.AutoSystemID\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data.code === 0) {\r\n            this.data = res.data.data\r\n            this.setData()\r\n            this.getEcharts()\r\n          } else if (res.data.code === 1) {\r\n            this.$message.error(res.data.msg)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err)\r\n        })\r\n    },\r\n\r\n    // 处理数据\r\n    setData () {\r\n      if (this.NetTrafficSend.length > 65) {\r\n        for (const key in this.data[0]) {\r\n          if (this.hasOwnProperty(key)) {\r\n            for (var i = 0; i < 6; i++) {\r\n              this[key].shift()\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.data.forEach((el, index) => {\r\n        for (const key in el) {\r\n          if (el.hasOwnProperty(key) && this.hasOwnProperty(key)) {\r\n            if (key === 'SamplingTime') {\r\n            } else {\r\n              this[key].push({\r\n                name: '',\r\n                value: []\r\n              })\r\n              var num = this[key].length - 1\r\n              this[key][num].name = new Date(el.SamplingTime)\r\n              this[key][num].value = [new Date(el.SamplingTime), el[key]]\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    getEcharts () {\r\n      // 第一个图\r\n      var myChart = this.$echarts.init(document.getElementById('myChart'))\r\n      myChart.setOption({\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '8%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        title: {\r\n          text: '网络流量发送'\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'time',\r\n          boundaryGap: false,\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, '100%'],\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            symbol: 'none',\r\n            name: '网络流量发送',\r\n            type: 'line',\r\n            data: this.NetTrafficSend,\r\n            smooth: true,\r\n            itemStyle: {\r\n              color: '#7CB5EC'\r\n            }\r\n          }\r\n        ]\r\n      })\r\n\r\n      // 第2个图\r\n      var myChart1 = this.$echarts.init(document.getElementById('myChart1'))\r\n      myChart1.setOption({\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '8%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        title: {\r\n          text: '网络流量接收'\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'time',\r\n          boundaryGap: false,\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, '100%'],\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            symbol: 'none',\r\n            name: '网络流量接收',\r\n            type: 'line',\r\n            data: this.NetTrafficReceive,\r\n            smooth: true,\r\n            itemStyle: {\r\n              color: '#69F9C4'\r\n            }\r\n          }\r\n        ]\r\n      })\r\n\r\n      setTimeout(function () {\r\n        window.onresize = function () {\r\n          myChart.resize()\r\n          myChart1.resize()\r\n        }\r\n      }, 200)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkMonitor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkMonitor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NetworkMonitor.vue?vue&type=template&id=bca6fe5e&scoped=true&\"\nimport script from \"./NetworkMonitor.vue?vue&type=script&lang=js&\"\nexport * from \"./NetworkMonitor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bca6fe5e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}