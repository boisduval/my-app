{"version":3,"sources":["webpack:///./src/views/SystemManagement/RealtimeMonitor.vue?adfa","webpack:///src/views/SystemManagement/RealtimeMonitor.vue","webpack:///./src/views/SystemManagement/RealtimeMonitor.vue?4ed9","webpack:///./src/views/SystemManagement/RealtimeMonitor.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticStyle","staticRenderFns","data","xAxis","yAxis","series","AutoSystemID","CONTENTSwitches","CPUDPCTime","CPUInterruptTime","CPUPrivilegedTime","CPUProcessorTime","DISCQueueLengh","DISKAverageTimeRead","DISKAverageTimeWrite","DISKRead","DISKTime","DISKWrite","HANDLECountCounter","MEMAvailable","MEMCached","MEMCommitLimit","MEMCommited","MEMCommitedPerc","MEMPoolNonPaged","MEMPoolPaged","NetTrafficReceive","NetTrafficSend","PageFile","ProcessorQueueLengh","SYSTEMCalls","SamplingTime","THREADCount","interval","myChart","myChart1","created","localStorage","getItem","getData","setInterval","console","log","$once","clearInterval","methods","url","$axios","setData","forEach","el","hasOwnProperty","key","time","split","getEcharts","$echarts","init","document","getElementById","setOption","tooltip","trigger","position","pt","formatter","value","str","item","marker","seriesName","legend","grid","left","right","bottom","containLabel","title","text","toolbox","feature","saveAsImage","type","boundaryGap","axisLabel","max","myChart2","setTimeout","window","onresize","resize","component"],"mappings":"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","file":"js/RealtimeMonitor.105c1e90.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"myChart\"}})]),_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"myChart1\"}})]),_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"myChart2\"}})]),_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"myChart3\"}})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-col :span=\"12\">\r\n      <div id=\"myChart\" style=\"height:400px\"></div>\r\n    </el-col>\r\n    <el-col :span=\"12\">\r\n      <div id=\"myChart1\" style=\"height:400px\"></div>\r\n    </el-col>\r\n    <el-col :span=\"12\">\r\n      <div id=\"myChart2\" style=\"height:400px\"></div>\r\n    </el-col>\r\n    <el-col :span=\"12\">\r\n      <div id=\"myChart3\" style=\"height:400px\"></div>\r\n    </el-col>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      xAxis: [],\r\n      yAxis: '',\r\n      series: [],\r\n      AutoSystemID: '',\r\n      data: [],\r\n      CONTENTSwitches: [],\r\n      CPUDPCTime: [],\r\n      CPUInterruptTime: [],\r\n      CPUPrivilegedTime: [],\r\n      CPUProcessorTime: [],\r\n      DISCQueueLengh: [],\r\n      DISKAverageTimeRead: [],\r\n      DISKAverageTimeWrite: [],\r\n      DISKRead: [],\r\n      DISKTime: [],\r\n      DISKWrite: [],\r\n      HANDLECountCounter: [],\r\n      MEMAvailable: [],\r\n      MEMCached: [],\r\n      MEMCommitLimit: [],\r\n      MEMCommited: [],\r\n      MEMCommitedPerc: [],\r\n      MEMPoolNonPaged: [],\r\n      MEMPoolPaged: [],\r\n      NetTrafficReceive: [],\r\n      NetTrafficSend: [],\r\n      PageFile: [],\r\n      ProcessorQueueLengh: [],\r\n      SYSTEMCalls: [],\r\n      SamplingTime: [],\r\n      THREADCount: [],\r\n      interval: '',\r\n      myChart: '',\r\n      myChart1: ''\r\n    }\r\n  },\r\n  created () {\r\n    this.AutoSystemID = localStorage.getItem('AutoSystemID')\r\n    this.getData()\r\n    this.interval = setInterval(() => {\r\n      console.log('ok')\r\n      this.getData()\r\n    }, 3000)\r\n    this.$once('hook:beforeDestroy', () => {\r\n      clearInterval(this.interval)\r\n    })\r\n  },\r\n  methods: {\r\n    getData () {\r\n      // if (this.myChart !== '') {\r\n      //   this.myChart.clear()\r\n      // }\r\n      this.CONTENTSwitches = []\r\n      this.CPUDPCTime = []\r\n      this.CPUInterruptTime = []\r\n      this.CPUPrivilegedTime = []\r\n      this.CPUProcessorTime = []\r\n      this.DISCQueueLengh = []\r\n      this.DISKAverageTimeRead = []\r\n      this.DISKAverageTimeWrite = []\r\n      this.DISKRead = []\r\n      this.DISKTime = []\r\n      this.DISKWrite = []\r\n      this.HANDLECountCounter = []\r\n      this.MEMAvailable = []\r\n      this.MEMCached = []\r\n      this.MEMCommitLimit = []\r\n      this.MEMCommited = []\r\n      this.MEMCommitedPerc = []\r\n      this.MEMPoolNonPaged = []\r\n      this.MEMPoolPaged = []\r\n      this.NetTrafficReceive = []\r\n      this.NetTrafficSend = []\r\n      this.PageFile = []\r\n      this.ProcessorQueueLengh = []\r\n      this.SYSTEMCalls = []\r\n      this.SamplingTime = []\r\n      this.THREADCount = []\r\n      var url = '/api/Monitor/GetSystemMonitorInfo'\r\n      this.$axios\r\n        .get(url, {\r\n          params: {\r\n            AutoSystemID: this.AutoSystemID\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data.code === 0) {\r\n            this.data = res.data.data\r\n            this.setData()\r\n            this.getEcharts()\r\n          } else if (res.data.code === 1) {\r\n            this.$message.error(res.data.msg)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err)\r\n        })\r\n    },\r\n\r\n    // 处理数据\r\n    setData () {\r\n      this.data.forEach((el, index) => {\r\n        for (const key in el) {\r\n          if (el.hasOwnProperty(key) && this.hasOwnProperty(key)) {\r\n            if (key === 'SamplingTime') {\r\n              var time = el[key].split('.')[0]\r\n              // time = time.replace('T', '\\n')\r\n              time = time.split('T')[1]\r\n              this[key].push(time)\r\n            } else {\r\n              this[key].push(el[key])\r\n            }\r\n          }\r\n        }\r\n      })\r\n    },\r\n\r\n    getEcharts () {\r\n      // 第一个图\r\n      var myChart = this.$echarts.init(document.getElementById('myChart'))\r\n      myChart.setOption({\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          position: function (pt) {\r\n            return [pt[0], '10%']\r\n          },\r\n          formatter (value) {\r\n            let str = value[0].name + '<br/>'\r\n            value.forEach(item => {\r\n              str += item.marker + item.seriesName + ': ' + item.data + '%' + '<br/>'\r\n            })\r\n            return str\r\n          }\r\n        },\r\n        legend: {\r\n          // data: ['处理器Cpu时间', 'Cpu特权时间', 'Cpu中断时间', 'Cpu DPC时间']\r\n          data: ['处理器Cpu时间']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        title: {\r\n          text: 'CPU监控'\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.SamplingTime\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, '100%'],\r\n          axisLabel: {\r\n            formatter: '{value} (%)'\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '处理器Cpu时间',\r\n            type: 'line',\r\n            data: this.CPUProcessorTime\r\n          }\r\n          // {\r\n          //   name: 'Cpu特权时间',\r\n          //   type: 'line',\r\n          //   data: this.CPUPrivilegedTime\r\n          // },\r\n          // {\r\n          //   name: 'Cpu中断时间',\r\n          //   type: 'line',\r\n          //   data: this.CPUPrivilegedTime\r\n          // },\r\n          // {\r\n          //   name: 'Cpu DPC时间',\r\n          //   type: 'line',\r\n          //   data: this.CPUDPCTime\r\n          // }\r\n        ]\r\n      })\r\n\r\n      // 第二个图\r\n      var myChart1 = this.$echarts.init(document.getElementById('myChart1'))\r\n      myChart1.setOption({\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          position: function (pt) {\r\n            return [pt[0], '10%']\r\n          },\r\n          formatter (value) {\r\n            let str = value[0].name + '<br/>'\r\n            value.forEach(item => {\r\n              str += item.marker + item.seriesName + ': ' + item.data + '%' + '<br/>'\r\n            })\r\n            return str\r\n          }\r\n        },\r\n        legend: {\r\n          // data: ['可用内存', '通用内存', '最大内存', '内存使用比例']\r\n          data: ['内存使用比例']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        title: {\r\n          text: '内存监控'\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.SamplingTime\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, '100%'],\r\n          max: 100,\r\n          axisLabel: {\r\n            formatter: '{value} (%)'\r\n          }\r\n        },\r\n        series: [\r\n          // {\r\n          //   name: '可用内存',\r\n          //   type: 'line',\r\n          //   data: this.MEMAvailable\r\n          // },\r\n          // {\r\n          //   name: '通用内存',\r\n          //   type: 'line',\r\n          //   data: this.MEMCommited\r\n          // },\r\n          // {\r\n          //   name: '最大内存',\r\n          //   type: 'line',\r\n          //   data: this.MEMCommitLimit\r\n          // },\r\n          {\r\n            name: '内存使用比例',\r\n            type: 'line',\r\n            data: this.MEMCommitedPerc\r\n          }\r\n        ]\r\n      })\r\n\r\n      // 第三个图\r\n      var myChart2 = this.$echarts.init(document.getElementById('myChart2'))\r\n      myChart2.setOption({\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          position: function (pt) {\r\n            return [pt[0], '10%']\r\n          }\r\n        },\r\n        legend: {\r\n          // data: ['可用内存', '通用内存', '最大内存', '内存使用比例']\r\n          data: ['网络流量发送', '网络流量接收']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        title: {\r\n          text: '网络监控'\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.SamplingTime\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, '100%']\r\n        },\r\n        series: [\r\n          // {\r\n          //   name: '可用内存',\r\n          //   type: 'line',\r\n          //   data: this.MEMAvailable\r\n          // },\r\n          // {\r\n          //   name: '通用内存',\r\n          //   type: 'line',\r\n          //   data: this.MEMCommited\r\n          // },\r\n          // {\r\n          //   name: '最大内存',\r\n          //   type: 'line',\r\n          //   data: this.MEMCommitLimit\r\n          // },\r\n          {\r\n            name: '网络流量发送',\r\n            type: 'line',\r\n            data: this.NetTrafficSend\r\n          },\r\n          {\r\n            name: '网络流量接收',\r\n            type: 'line',\r\n            data: this.NetTrafficReceive\r\n          }\r\n        ]\r\n      })\r\n\r\n      setTimeout(function () {\r\n        window.onresize = function () {\r\n          myChart.resize()\r\n          myChart1.resize()\r\n          myChart2.resize()\r\n        }\r\n      }, 200)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RealtimeMonitor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RealtimeMonitor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RealtimeMonitor.vue?vue&type=template&id=5f262e67&scoped=true&\"\nimport script from \"./RealtimeMonitor.vue?vue&type=script&lang=js&\"\nexport * from \"./RealtimeMonitor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f262e67\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}